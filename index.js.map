{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import karas from 'karas';\nimport { version } from '../package.json';\n\nclass FrameAnimate extends karas.Component {\n  constructor(props) {\n    super(props);\n    let { duration = 1000, direction, playbackRate = 1, iterations = Infinity, } = this.props;\n    this.duration = duration;\n    this.direction = direction;\n    this.playbackRate = playbackRate;\n    this.iterations = iterations;\n  }\n  componentDidMount() {\n    let { list = [], autoPlay = true } = this.props;\n    this.__isPlay = autoPlay;\n    if(list.length) {\n      let count = 0, total = 0, sr = this.shadowRoot;\n      list.forEach(item => {\n        let { row = 1, column = 1, number = row * column } = item;\n        item.row = row;\n        item.column = column;\n        item.number = number;\n        total += number;\n      });\n      // 计算每个所占时长\n      let per = this.duration / total;\n      list.forEach(item => {\n        item.begin = count;\n        item.end = count += per * item.number;\n      });\n      // 反向也需要\n      count = 0;\n      list.reverse().forEach(item => {\n        item.begin2 = count;\n        item.end2 = count += per * item.number;\n      });\n      // 帧动画部分\n      let alternate = 1;\n      this.__timeCount = 0;\n      this.__playCount = 0;\n      sr.frameAnimate(diff => {\n        if(!this.__isPlay) {\n          return;\n        }\n        this.__timeCount += diff * this.playbackRate;\n        while(this.__timeCount >= this.duration) {\n          this.__timeCount -= this.duration;\n          this.__playCount++;\n          if(this.direction === 'alternate') {\n            alternate *= -1;\n          }\n        }\n        if(this.__playCount >= this.iterations) {\n          return;\n        }\n        if(alternate === -1) {\n          for(let i = 0; i < list.length; i++) {\n            let item = list[i];\n            if(this.__timeCount >= item.begin2 && this.__timeCount < item.end2) {\n              let percent = (this.__timeCount - item.begin2) / (item.end2 - item.begin2);\n              let per = 1 / item.number;\n              let n = Math.floor(percent / per);\n              if(n > item.number) {\n                n = item.number - 1;\n              }\n              let x = n % item.column;\n              let y = Math.floor(n / item.column);\n              x = item.column - x - 1;\n              sr.updateStyle({\n                backgroundImage: `url(${item.url})`,\n                backgroundSize: `${item.column * 100}% ${item.row * 100}%`,\n                backgroundPositionX: x * 100 / (item.column - 1) + '%',\n                backgroundPositionY: y * 100 / (item.row - 1) + '%',\n              }, () => {\n                this.emit('frame');\n              });\n              break;\n            }\n          }\n        }\n        else {\n          for(let i = 0; i < list.length; i++) {\n            let item = list[i];\n            if(this.__timeCount >= item.begin && this.__timeCount < item.end) {\n              let percent = (this.__timeCount - item.begin) / (item.end - item.begin);\n              let per = 1 / item.number;\n              let n = Math.floor(percent / per);\n              if(n > item.number) {\n                n = item.number - 1;\n              }\n              let x = n % item.column;\n              let y = Math.floor(n / item.column);\n              sr.updateStyle({\n                backgroundImage: `url(${item.url})`,\n                backgroundSize: `${item.column * 100}% ${item.row * 100}%`,\n                backgroundPositionX: x * 100 / (item.column - 1) + '%',\n                backgroundPositionY: y * 100 / (item.row - 1) + '%',\n              }, () => {\n                this.emit('frame');\n              });\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    return <div/>;\n  }\n\n  play() {\n    this.__isPlay = true;\n    this.__timeCount = 0;\n    this.__playCount = 0;\n  }\n\n  pause() {\n    this.__isPlay = false;\n  }\n\n  resume() {\n    this.__isPlay = true;\n  }\n\n  get duration() {\n    return this.__duration;\n  }\n\n  set duration(v) {\n    this.__duration = parseInt(v) || 1000;\n  }\n\n  get playbackRate() {\n    return this.__playbackRate;\n  }\n\n  set playbackRate(v) {\n    v = parseFloat(v) || 1;\n    if(v <= 0) {\n      v = 1;\n    }\n    this.__playbackRate = v;\n  }\n\n  get direction() {\n    return this.__direction;\n  }\n\n  set direction(v) {\n    this.__direction = v;\n  }\n\n  get iterations() {\n    return this.__iterations;\n  }\n\n  set iterations(v) {\n    if(v !== Infinity) {\n      v = parseInt(v) || 1;\n    }\n    if(v <= 0) {\n      v = 1;\n    }\n    this.__iterations = v;\n  }\n}\n\nFrameAnimate.version = version;\n\nexport default FrameAnimate;\n"],"names":["FrameAnimate","props","duration","direction","playbackRate","iterations","Infinity","list","autoPlay","__isPlay","length","count","total","sr","shadowRoot","forEach","item","row","column","number","per","begin","end","reverse","begin2","end2","alternate","__timeCount","__playCount","frameAnimate","diff","i","percent","n","Math","floor","x","y","updateStyle","backgroundImage","url","backgroundSize","backgroundPositionX","backgroundPositionY","emit","karas","__duration","v","parseInt","__playbackRate","parseFloat","__direction","__iterations","Component","version"],"mappings":"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"}