{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import karas from 'karas';\nimport { version } from '../package.json';\n\nclass FrameAnimate extends karas.Component {\n  constructor(props) {\n    super(props);\n    let {\n      duration = 1000,\n      direction,\n      delay = 0,\n      playbackRate = 1,\n      iterations = Infinity,\n      fill = 'both',\n    } = this.props;\n    this.duration = duration;\n    this.direction = direction;\n    this.playbackRate = playbackRate;\n    this.iterations = iterations;\n    this.delay = delay;\n    this.fill = fill;\n  }\n\n  componentDidMount() {\n    let { list = [], autoPlay = true } = this.props;\n    this.__isPlay = autoPlay;\n    if(list.length) {\n      let count = 0, total = 0, sr = this.shadowRoot;\n      list.forEach(item => {\n        let { row = 1, column = 1, number = row * column } = item;\n        item.row = row;\n        item.column = column;\n        item.number = number;\n        total += number;\n      });\n      // 计算每个所占时长\n      let per = this.duration / total;\n      list.forEach(item => {\n        item.begin = count;\n        item.end = count += per * item.number;\n      });\n      // 反向也需要\n      count = 0;\n      list.reverse().forEach(item => {\n        item.begin2 = count;\n        item.end2 = count += per * item.number;\n      });\n      // 帧动画部分\n      let alternate = false;\n      this.__timeCount = 0;\n      sr.frameAnimate(diff => {\n        if(!this.__isPlay) {\n          return;\n        }\n        let currentTime = this.__timeCount += diff * this.playbackRate;\n        currentTime -= this.delay;\n        let playCount = 0;\n        while(currentTime >= this.duration) {\n          currentTime -= this.duration;\n          playCount++;\n        }\n        if(playCount >= this.iterations) {\n          this.__isPlay = false;\n          if(this.fill !== 'both' && this.fill !== 'forwards') {\n            sr.updateStyle({\n              backgroundImage: null,\n            });\n          }\n          return;\n        }\n        if(this.direction === 'alternate') {\n          alternate = playCount % 2 === 1;\n        }\n        if(alternate) {\n          for(let i = 0; i < list.length; i++) {\n            let item = list[i];\n            if(currentTime >= item.begin2 && currentTime < item.end2) {\n              let percent = (currentTime - item.begin2) / (item.end2 - item.begin2);\n              let per = 1 / item.number;\n              let n = Math.floor(percent / per);\n              if(n > item.number) {\n                n = item.number - 1;\n              }\n              let x = n % item.column;\n              let y = Math.floor(n / item.column);\n              x = item.column - x - 1;\n              y = item.row - y - 1;\n              sr.updateStyle({\n                backgroundImage: `url(${item.url})`,\n                backgroundSize: `${item.column * 100}% ${item.row * 100}%`,\n                backgroundPositionX: x * 100 / (item.column - 1) + '%',\n                backgroundPositionY: y * 100 / (item.row - 1) + '%',\n              }, () => {\n                this.emit('frame');\n              });\n              break;\n            }\n          }\n        }\n        else {\n          for(let i = 0; i < list.length; i++) {\n            let item = list[i];\n            if(currentTime >= item.begin && currentTime < item.end) {\n              let percent = (currentTime - item.begin) / (item.end - item.begin);\n              let per = 1 / item.number;\n              let n = Math.floor(percent / per);\n              if(n > item.number) {\n                n = item.number - 1;\n              }\n              let x = n % item.column;\n              let y = Math.floor(n / item.column);\n              sr.updateStyle({\n                backgroundImage: `url(${item.url})`,\n                backgroundSize: `${item.column * 100}% ${item.row * 100}%`,\n                backgroundPositionX: x * 100 / (item.column - 1) + '%',\n                backgroundPositionY: y * 100 / (item.row - 1) + '%',\n              }, () => {\n                this.emit('frame');\n              });\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    let fill = this.fill;\n    if(fill === 'both' || fill === 'backwards') {\n      let first = (this.props.list || [])[0];\n      if(first) {\n        let { row = 1, column = 1 } = first;\n        return <div style={{\n          backgroundImage: `url(${first.url})`,\n          backgroundSize: `${column * 100}% ${row * 100}%`,\n          backgroundPositionX: 0,\n          backgroundPositionY: 0,\n        }}/>;\n      }\n    }\n    return <div/>;\n  }\n\n  play() {\n    this.__isPlay = true;\n    this.__timeCount = 0;\n  }\n\n  pause() {\n    this.__isPlay = false;\n  }\n\n  pauseTo(n = 0) {\n    this.__isPlay = false;\n    let { list = [] } = this.props;\n    let count = 0;\n    for(let i = 0, len = list.length; i < len; i++) {\n      let item = list[i];\n      let { row = 1, column = 1, number = row * column } = item;\n      if(n < count + number) {\n        n -= count;\n        let x = n % column;\n        let y = Math.floor(n / column);\n        this.shadowRoot.updateStyle({\n          backgroundImage: `url(${item.url})`,\n          backgroundSize: `${column * 100}% ${row * 100}%`,\n          backgroundPositionX: x * 100 / (item.column - 1) + '%',\n          backgroundPositionY: y * 100 / (item.row - 1) + '%',\n        });\n        break;\n      }\n    }\n  }\n\n  stop() {\n    this.__isPlay = false;\n    this.__timeCount = 0;\n    let first = (this.props.list || [])[0];\n    if(first) {\n      let { row = 1, column = 1 } = first;\n      this.shadowRoot.updateStyle({\n        backgroundImage: `url(${first.url})`,\n        backgroundSize: `${column * 100}% ${row * 100}%`,\n        backgroundPositionX: 0,\n        backgroundPositionY: 0,\n      });\n    }\n  }\n\n  resume() {\n    this.__isPlay = true;\n  }\n\n  get duration() {\n    return this.__duration;\n  }\n\n  set duration(v) {\n    v = parseFloat(v) || 1000;\n    if(v <= 0) {\n      v = 1;\n    }\n    this.__duration = v;\n  }\n\n  get playbackRate() {\n    return this.__playbackRate;\n  }\n\n  set playbackRate(v) {\n    v = parseFloat(v) || 1;\n    if(v <= 0) {\n      v = 1;\n    }\n    this.__playbackRate = v;\n  }\n\n  get direction() {\n    return this.__direction;\n  }\n\n  set direction(v) {\n    this.__direction = v;\n  }\n\n  get iterations() {\n    return this.__iterations;\n  }\n\n  set iterations(v) {\n    if(v !== Infinity) {\n      v = parseInt(v) || 1;\n    }\n    if(v <= 0) {\n      v = 1;\n    }\n    this.__iterations = v;\n  }\n\n  get delay() {\n    return this.__delay;\n  }\n\n  set delay(v) {\n    this.__delay = parseInt(v) || 0;\n  }\n\n  get fill() {\n    return this.__fill;\n  }\n\n  set fill(v) {\n    this.__fill = v;\n  }\n}\n\nFrameAnimate.version = version;\n\nexport default FrameAnimate;\n"],"names":["FrameAnimate","props","duration","direction","delay","playbackRate","iterations","Infinity","fill","list","autoPlay","__isPlay","length","count","total","sr","shadowRoot","forEach","item","row","column","number","per","begin","end","reverse","begin2","end2","alternate","__timeCount","frameAnimate","diff","currentTime","playCount","updateStyle","backgroundImage","i","percent","n","Math","floor","x","y","url","backgroundSize","backgroundPositionX","backgroundPositionY","emit","first","karas","len","__duration","v","parseFloat","__playbackRate","__direction","__iterations","parseInt","__delay","__fill","Component","version"],"mappings":"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"}