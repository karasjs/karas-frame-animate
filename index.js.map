{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import karas from 'karas';\nimport { version } from '../package.json';\n\nclass FrameAnimate extends karas.Component {\n  componentDidMount() {\n    let { list = [], duration = 1000, direction, playbackRate = 1, autoPlay = true } = this.props;\n    this.__playbackRate = playbackRate;\n    this.__isPlay = autoPlay;\n    if(list.length) {\n      let count = 0, total = 0, sr = this.shadowRoot;\n      list.forEach(item => {\n        let { row = 1, column = 1, number = row * column } = item;\n        item.row = row;\n        item.column = column;\n        item.number = number;\n        total += number;\n      });\n      // 计算每个所占时长\n      let per = duration / total;\n      list.forEach(item => {\n        item.begin = count;\n        item.end = count += per * item.number;\n      });\n      // 反向也需要\n      count = 0;\n      list.reverse().forEach(item => {\n        item.begin2 = count;\n        item.end2 = count += per * item.number;\n      });\n      // 帧动画部分\n      let alternate = 1, first = true;\n      this.__count = 0;\n      sr.frameAnimate(diff => {\n        if(!this.__isPlay && !first) {\n          return;\n        }\n        first = false;\n        this.__count += diff * this.playbackRate;\n        while(this.__count >= duration) {\n          this.__count -= duration;\n          if(direction === 'alternate') {\n            alternate *= -1;\n          }\n        }\n        if(alternate === -1) {\n          for(let i = 0; i < list.length; i++) {\n            let item = list[i];\n            if(this.__count >= item.begin2 && this.__count < item.end2) {\n              let percent = (this.__count - item.begin2) / (item.end2 - item.begin2);\n              let per = 1 / item.number;\n              let n = Math.floor(percent / per);\n              if(n > item.number) {\n                n = item.number - 1;\n              }\n              let x = n % item.column;\n              let y = Math.floor(n / item.column);\n              x = item.column - x - 1;\n              sr.updateStyle({\n                backgroundImage: `url(${item.url})`,\n                backgroundSize: `${item.column * 100}% ${item.row * 100}%`,\n                backgroundPositionX: x * 100 / (item.column - 1) + '%',\n                backgroundPositionY: y * 100 / (item.row - 1) + '%',\n              }, () => {\n                this.emit('frame');\n              });\n              break;\n            }\n          }\n        }\n        else {\n          for(let i = 0; i < list.length; i++) {\n            let item = list[i];\n            if(this.__count >= item.begin && this.__count < item.end) {\n              let percent = (this.__count - item.begin) / (item.end - item.begin);\n              let per = 1 / item.number;\n              let n = Math.floor(percent / per);\n              if(n > item.number) {\n                n = item.number - 1;\n              }\n              let x = n % item.column;\n              let y = Math.floor(n / item.column);\n              sr.updateStyle({\n                backgroundImage: `url(${item.url})`,\n                backgroundSize: `${item.column * 100}% ${item.row * 100}%`,\n                backgroundPositionX: x * 100 / (item.column - 1) + '%',\n                backgroundPositionY: y * 100 / (item.row - 1) + '%',\n              }, () => {\n                this.emit('frame');\n              });\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  render() {\n    return <div/>;\n  }\n\n  play() {\n    this.__isPlay = true;\n    this.__count = 0;\n  }\n\n  pause() {\n    this.__isPlay = false;\n  }\n\n  resume() {\n    this.__isPlay = true;\n  }\n\n  get playbackRate() {\n    return this.__playbackRate || this.props.playbackRate || 1;\n  }\n\n  set playbackRate(v) {\n    this.__playbackRate = parseFloat(v) || 1;\n  }\n}\n\nFrameAnimate.version = version;\n\nexport default FrameAnimate;\n"],"names":["FrameAnimate","props","list","duration","direction","playbackRate","autoPlay","__playbackRate","__isPlay","length","count","total","sr","shadowRoot","forEach","item","row","column","number","per","begin","end","reverse","begin2","end2","alternate","first","__count","frameAnimate","diff","i","percent","n","Math","floor","x","y","updateStyle","backgroundImage","url","backgroundSize","backgroundPositionX","backgroundPositionY","emit","karas","v","parseFloat","Component","version"],"mappings":"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"}